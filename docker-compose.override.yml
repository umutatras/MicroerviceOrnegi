services:
  mongo.db.catalog:
    restart: always
    image: mongo:8.0-rc
    container_name: mongo.db.catalog.container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27030:27017"
    volumes:
      - mongo.db.catalog.volume:/data/db
  mongo.db.catalog.ui:
    restart: always
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo.db.catalog.ui.container
    ports:
      - 27032:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo.db.catalog:27017/
      ME_CONFIG_BASICAUTH: false
  mongo.db.discount:
    restart: always
    image: mongo:8.0-rc
    container_name: mongo.db.discount.container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27034:27017"
    volumes:
      - mongo.db.discount.volume:/data/db
  mongo.db.discount.ui:
    restart: always
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo.db.discount.ui.container
    ports:
      - 27036:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo.db.discount:27017/
      ME_CONFIG_BASICAUTH: false
  redis.db.basket:
    restart: always
    image: redis:7.0-alpine
    container_name: redis.db.container
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis.db.basket.volume:/data
  redis.db.basket.ui:
    restart: always
    image: rediscommander/redis-commander:latest
    container_name: redis.db.basket.ui.container
    ports:
      - "27033:8081"
    environment:
      REDIS_HOST: redis.db.basket
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_UI_USERNAME}
      HTTP_PASSWORD: ${REDIS_UI_PASSWORD}
  sqlserver.db.order:
    restart: always
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver.db.order
    user: root
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver.db.order.volume:/var/opt/mssql
  keycloak:
    restart: always
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0
    command: start
    environment:
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HOSTNAME_STRICT: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres.db.keycloak/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - postgres.db.keycloak
  postgres.db.keycloak:
    restart: always
    image: postgres:16.2
    container_name: postgres.db.keycloak.container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - posrgres.db.keycloak.volume:/var/lib/postgresql/data
  postgres.db.keycloak.ui:
    restart: always
    image: dpage/pgadmin4
    container_name: postgres.db.keycloak.container.ui
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - posrgres.db.keycloak.ui.volume:/var/lib/pgadmin
  rabbitmq:
    restart: always
    image: rabbitmq:3.13.7-management
    container_name: rabbitmq
    ports:
      - 5672:5672  
      - 15672:15672 
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  microerviceornegi.basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Audience=basket.api
      - ConnectionStrings:Redis=redis.db.basket:6379,password=Password12
    ports:
      - "8080"
    depends_on:
      - redis.db.basket
      - rabbitmq
    restart: always
  microerviceornegi.catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
      - MongoOption:ConnectionString=mongodb://myuser:Password12@mongo.db.catalog:27017
    ports:
      - "8080"
    depends_on:
      - mongo.db.catalog
      - rabbitmq
    restart: always
  microerviceornegi.discount.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
      - MongoOption:ConnectionString=mongodb://myuser:Password12@mongo.db.discount:27017 
    ports:
      - "8080"
    depends_on:
      - mongo.db.discount
      - rabbitmq
    restart: always
  microerviceornegi.file.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
    ports:
      - "8080"
    restart: always
    depends_on:
      - rabbitmq
  microerviceornegi.gateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
    ports:
      - "8080"
    restart: always

  microerviceornegi.order.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
      - AddressUrlOption:PaymentUrl=http://microerviceornegi.payment.api:8080
      - ConnectionStrings:SqlServer=Server=sqlserver.db.order,1433;Database=order-db;User Id=sa;Password=Password12*;TrustServerCertificate=True;
    ports:
      - "8080"
    depends_on:
      - sqlserver.db.order
      - rabbitmq
    restart: always
  microerviceornegi.payment.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - BusOption:Address=rabbitmq   
      - BusOption:Port=5672   
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant
      - IdentityOption:Issuer=http://keycloak:8080/realms/udemyTenant
    ports:
      - "8080"
    restart: always
    depends_on:
      - rabbitmq

  microerviceornegi.web:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - MicroserviceOption:Catalog:BaseAddress=http://microerviceornegi.catalog.api:8080
      - MicroserviceOption:File:BaseAddress=http://microerviceornegi.file.api:8080
      - MicroserviceOption:Basket:BaseAddress=http://microerviceornegi.basket.api:8080      
      - MicroserviceOption:Discount:BaseAddress=http://microerviceornegi.discount.api:8080      
      - MicroserviceOption:Order:BaseAddress=http://microerviceornegi.order.api:8080      
      - IdentityOption:Address=http://keycloak:8080/realms/udemyTenant      
      - IdentityOption:BaseAddress=http://keycloak:8080
      - GatewayOption:BaseAddress=http://microerviceornegi.gateway:8080
    ports:
      - "5050:8080"
    restart: always

volumes:
  mongo.db.catalog.volume:
  mongo.db.discount.volume:  
  redis.db.basket.volume:
  sqlserver.db.order.volume:
  posrgres.db.keycloak.volume:
  posrgres.db.keycloak.ui.volume:
  rabbitmq_data:







